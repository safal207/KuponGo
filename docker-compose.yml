version: '3.8'

services:
  # LiminalDB - живая база данных
  liminaldb:
    build:
      context: .
      dockerfile: Dockerfile.liminaldb
    container_name: kupongo-liminaldb
    ports:
      - "8787:8787"
    volumes:
      - liminal-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kupongo-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: kupongo-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - LIMINALDB_URL=ws://liminaldb:8787
      - LIMINALDB_NAMESPACE=alpha
      - LIMINALDB_KEY_ID=kupongo-api-prod
      - LIMINALDB_SECRET=${LIMINALDB_SECRET:-changeme}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - liminaldb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kupongo-network

  # WebXR Demo
  webxr:
    build:
      context: .
      dockerfile: Dockerfile.webxr
    container_name: kupongo-webxr
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kupongo-network

  # Nginx - reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: kupongo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - webxr
    restart: unless-stopped
    networks:
      - kupongo-network

volumes:
  liminal-data:
    driver: local

networks:
  kupongo-network:
    driver: bridge
