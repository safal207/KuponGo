import 'package:flutter/material.dart';

class ProfileScreen extends StatelessWidget {
  const ProfileScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–ü—Ä–æ—Ñ–∏–ª—å'),
        actions: [
          IconButton(
            icon: const Icon(Icons.settings),
            onPressed: () {
              // Navigate to settings
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            // Profile header
            const CircleAvatar(
              radius: 50,
              child: Icon(Icons.person, size: 50),
            ),
            const SizedBox(height: 15),
            const Text(
              '–û—Ö–æ—Ç–Ω–∏–∫123',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            const Text(
              'hunter@example.com',
              style: TextStyle(
                color: Colors.grey,
              ),
            ),
            const SizedBox(height: 10),

            // Level badge
            Container(
              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 8),
              decoration: BoxDecoration(
                gradient: const LinearGradient(
                  colors: [Color(0xFF667EEA), Color(0xFF764BA2)],
                ),
                borderRadius: BorderRadius.circular(20),
              ),
              child: const Text(
                '–£—Ä–æ–≤–µ–Ω—å 12 ‚≠ê‚≠ê‚≠ê',
                style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            const SizedBox(height: 30),

            // Stats
            Card(
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 20),
                    _buildStatRow('–ü–æ–π–º–∞–Ω–æ –≤—Å–µ–≥–æ:', '247'),
                    const SizedBox(height: 10),
                    Row(
                      children: [
                        const SizedBox(width: 20),
                        Expanded(
                          child: Column(
                            children: [
                              _buildStatRow('üü¢ Common:', '148'),
                              _buildStatRow('üîµ Rare:', '78'),
                              _buildStatRow('üü£ Epic:', '18'),
                              _buildStatRow('üü† Legendary:', '3'),
                            ],
                          ),
                        ),
                      ],
                    ),
                    const Divider(height: 30),
                    _buildStatRow('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:', '189'),
                    _buildStatRow('–°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ:', '\$1,247'),
                    _buildStatRow('–ü—Ä–æ–π–¥–µ–Ω–æ:', '42.3 –∫–º'),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 20),

            // Achievements
            Card(
              child: Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        const Text(
                          '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                          style: TextStyle(
                            fontSize: 20,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        TextButton(
                          onPressed: () {
                            // Show all achievements
                          },
                          child: const Text('–í—Å–µ ‚Üí'),
                        ),
                      ],
                    ),
                    const SizedBox(height: 15),
                    _buildAchievement(
                      'üèÜ',
                      '–ü–µ—Ä–≤—ã–π —É–ª–æ–≤',
                      '–ü–æ–π–º–∞—Ç—å –ø–µ—Ä–≤—ã–π –∫—É–ø–æ–Ω',
                      true,
                    ),
                    _buildAchievement(
                      'üçî',
                      '–ì—É—Ä–º–∞–Ω',
                      '–ü–æ—Å–µ—Ç–∏—Ç—å 50 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤',
                      true,
                    ),
                    _buildAchievement(
                      'üõçÔ∏è',
                      '–®–æ–ø–æ–≥–æ–ª–∏–∫',
                      '–ü–æ–π–º–∞—Ç—å 100 –∫—É–ø–æ–Ω–æ–≤',
                      true,
                    ),
                    _buildAchievement(
                      '‚≠ê',
                      '–õ–µ–≥–µ–Ω–¥–∞',
                      '–ü–æ–π–º–∞—Ç—å 10 legendary',
                      false,
                    ),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 20),

            // Actions
            ListTile(
              leading: const Icon(Icons.help_outline),
              title: const Text('–ü–æ–º–æ—â—å'),
              trailing: const Icon(Icons.chevron_right),
              onTap: () {},
            ),
            ListTile(
              leading: const Icon(Icons.privacy_tip_outlined),
              title: const Text('–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å'),
              trailing: const Icon(Icons.chevron_right),
              onTap: () {},
            ),
            ListTile(
              leading: const Icon(Icons.info_outline),
              title: const Text('–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'),
              trailing: const Icon(Icons.chevron_right),
              onTap: () {},
            ),
            ListTile(
              leading: const Icon(Icons.logout, color: Colors.red),
              title: const Text(
                '–í—ã–π—Ç–∏',
                style: TextStyle(color: Colors.red),
              ),
              onTap: () {
                _showLogoutDialog(context);
              },
            ),
            const SizedBox(height: 20),

            // Version
            Text(
              'KuponGo v1.0.0',
              style: TextStyle(
                color: Colors.grey[600],
                fontSize: 12,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildStatRow(String label, String value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 5),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(label),
          Text(
            value,
            style: const TextStyle(
              fontWeight: FontWeight.bold,
              fontSize: 16,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAchievement(String emoji, String title, String description, bool unlocked) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 15),
      child: Row(
        children: [
          Container(
            width: 50,
            height: 50,
            decoration: BoxDecoration(
              color: unlocked ? Colors.amber.withOpacity(0.2) : Colors.grey.withOpacity(0.2),
              borderRadius: BorderRadius.circular(10),
            ),
            child: Center(
              child: Text(
                emoji,
                style: TextStyle(
                  fontSize: 24,
                  opacity: unlocked ? 1.0 : 0.3,
                ),
              ),
            ),
          ),
          const SizedBox(width: 15),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: TextStyle(
                    fontWeight: FontWeight.bold,
                    color: unlocked ? Colors.black : Colors.grey,
                  ),
                ),
                Text(
                  description,
                  style: TextStyle(
                    fontSize: 12,
                    color: Colors.grey[600],
                  ),
                ),
              ],
            ),
          ),
          if (unlocked)
            const Icon(Icons.check_circle, color: Colors.green)
          else
            const Icon(Icons.lock_outline, color: Colors.grey),
        ],
      ),
    );
  }

  void _showLogoutDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?'),
        content: const Text('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?'),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('–û—Ç–º–µ–Ω–∞'),
          ),
          TextButton(
            onPressed: () {
              Navigator.pop(context);
              Navigator.pushReplacementNamed(context, '/login');
            },
            style: TextButton.styleFrom(
              foregroundColor: Colors.red,
            ),
            child: const Text('–í—ã–π—Ç–∏'),
          ),
        ],
      ),
    );
  }
}
